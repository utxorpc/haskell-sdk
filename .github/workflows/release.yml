name: "Release"

on:
  workflow_dispatch:
  push:
    tags: [v*]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install protoc
        run: |
          PROTOC_ZIP=protoc-3.14.0-linux-x86_64.zip
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/$PROTOC_ZIP
          unzip -o $PROTOC_ZIP -d . bin/protoc
          unzip -o $PROTOC_ZIP -d . 'include/*'
          rm -f $PROTOC_ZIP
          echo "$(pwd)/bin" >> "$GITHUB_PATH"

      - name: Restore Stack
        id: restore-stack
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.home }}.stack
            codegen/haskell/.stack-work
          key: stack-${{ hashFiles('stack.yaml.lock') }}
          restore-keys: stack-

      - name: "Dry run"
        id: dry-run
        shell: bash
        run: |
          export HACKAGE_KEY=${{ secrets.HACKAGE_REGISTRY_TOKEN }}
          stack test
          stack haddock --haddock-for-hackage
          stack upload --candidate --test-tarball client server
          stack upload --candidate client server --documentation

      - name: "Publish"
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: |
          export HACKAGE_KEY=${{ secrets.HACKAGE_REGISTRY_TOKEN }}
          stack upload client server
          stack upload client server --documentation

      - name: Make artifacts
        id: make-artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          VERSION: ${{ github.ref_name }}
        shell: bash
        run: |
          # Make tarballs and output location
          SERVER_DIST=$(stack sdist server 2>&1 |
            sed -nE 's|^(.*)utxorpc-server-'${{ env.VERSION }}'\.tar\.gz.*$|\1|p')
          echo "SERVER_DIST=$SERVER_DIST" >> "GITHUB_OUTPUT"
          CLIENT_DIST=$(stack sdist client 2>&1 |
            sed -nE 's|^(.*)utxorpc-client-'${{ env.VERSION }}'\.tar\.gz.*$|\1|p')
          echo "CLIENT_DIST=$CLIENT_DIST" >> "GITHUB_OUTPUT"

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          VERSION: ${{ github.ref_name }}
        with:
          files: |
            ${{ steps.make-artifacts.outputs.SERVER_SDIST }}
            ${{ steps.make-artifacts.outputs.CLIENT_SDIST }}

      - name: Cache Stack
        if: always() && steps.restore-stack.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.home }}.stack
            .stack-work
            server/.stack-work
            client/.stack-work
          key: stack-${{ hashFiles('stack.yaml.lock') }}
